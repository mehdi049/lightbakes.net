@model LightBakes.Models.Product

<div class="center-content container">
    <div class="row">
        <div class="col">
            <h1 class="text-bold text-center">@Model.Title</h1><br>
            <hr><br>
        </div>
    </div>

    <div class="row">
        <div class="col-lg-6 col-md-5 col-sm-12">
            <ul id="image-gallery" class="gallery list-unstyled cS-hidden">
                @foreach (var img in Model.Images)
                {
                    <li data-thumb="/Content/images/products/@img">
                        <img src="/Content/images/products/@img" />
                    </li>
                }
            </ul>
        </div>
        <div class="col-lg-6 col-md-7 col-sm-12">
            <br class="d-block d-md-none">
            <p>@Html.Raw(Model.Description)</p>
            <p><span class="text-bold">Ingédients</span></p>
            <p>@Model.Ingredient</p>
            @if (!string.IsNullOrEmpty(Model.NutritionalValue))
            {
                <p><span class="text-bold">Valeur nutritionnelle</span></p>
                <p>@Model.NutritionalValue</p>
            }
            <div class="row" id="order-form">
                <div class="col-lg-5 col-md-6 col-sm-4 col-6">
                    <div class="form-group">
                        <select id="price-option" class="form-control">
                            @foreach (var unity in Model.UnityOptions)
                            {
                                <option value="@unity.Price">@unity.Unity (@unity.Price TND)</option>
                            }
                        </select>
                    </div>
                </div>
                <div class="col-lg-5 col-md-6 col-sm-4 col-6">
                    <div class="form-group">
                        <select id="product-option" class="form-control">
                            @foreach (var option in Model.ProductOptions)
                            {
                                <option value="@option.Option">
                                    @option.Option (@if (option.Price != 0)
                                    {<text>+@option.Price TND</text>}
                                else
                                {<text>Gratuit</text>})
                                </option>
                            }
                        </select>
                    </div>
                </div>
                <div class="col-lg-2 col-md-3 col-sm-2 col-3">
                    <div class="form-group">
                        <input id="quantity" type="text" min="1" class="form-control" value="1">
                    </div>
                </div>
                <div class="col-lg-5 col-md-9 col-sm-6 col-9">
                    <div class="form-group">
                        <button type="button" id="submit-btn" class="btn btn-outline-primary btn-block">Ajouter au panier</button>
                    </div>
                </div>
                <div class="col-12">
                    <p class="text-large text-bold orange" id="total-price" style="display: inline-block">@Model.UnityOptions[0].Price</p> <span class="text-large text-bold orange">TND</span>
                </div>
            </div>
        </div>
    </div>
</div>

<br />

@if (ViewBag.SimilarProducts != null)
{
    <br />
    <br />

    <div class="container-fluid">
        <div class="row">
            <div class="text-center col">
                <h1 class="border-orange inline-block">Produits similaires</h1><br>
            </div>
        </div>
        <ul id="content-slider">
            @foreach (var product in ViewBag.SimilarProducts)
            {
                <li>
                    <a class="menu-item-link" href="/product/@product.Id">
                        <div class="menu-item">
                            <div class="img-area"><img src="~/Content/images/products/@product.Images[0]" alt="@product.Title" /></div>
                            <div style="text-align: center;">
                                <br />
                                <span class="text-bold">@product.Title</span> <br />
                                <span class="text-thin text-small">@product.Tags</span> <br />
                                <span class="text-bold text-italic">@product.UnityOptions[0].Price TND</span>
                                <span class="text-small"> (@product.UnityOptions[0].Unity)</span>
                            </div>
                        </div>
                    </a>
                </li>
            }
        </ul>
    </div>

    <br />
    <br />
}

@section Styles {
    <link rel="stylesheet" href="~/Content/lightslider.css" />
}

@section Scripts {
    <script src="~/Scripts/lightslider.js"></script>
    <script>
        $(function () {
            $("#header").addClass("header-black-bg");

            $('#image-gallery').lightSlider({
                gallery: true,
                item: 1,
                thumbItem: @Model.Images.Length,
                slideMargin: 0,
                speed: 1000,
                auto: false,
                loop: false,
                onSliderLoad: function () {
                    $('#image-gallery').removeClass('cS-hidden');
                }
            });

            $("#content-slider").lightSlider({
                loop: true,
                keyPress: true
            });

            $("#order-form .form-control").change(function () {
                var quantity = $("#quantity").val();
                if (isNaN(quantity) || quantity.indexOf(",") !== -1 || quantity.indexOf(".") !== -1 || parseInt(quantity) <= 0) {
                    $("#quantity").val("1");
                    return alert("Quantité incorrecte");
                }

                var unityOptionPrice = $("#price-option").val();
                var productOption = $("#product-option").val();

                var productOptionPrice = getProduct().ProductOptions.filter(
                    (x) => x.Option.toLowerCase() === productOption.toLowerCase()
                )[0].Price;

                var totalPrice = (unityOptionPrice.replace(/,/gi, ".") * quantity) + (productOptionPrice * quantity);

                var totalPriceText = ""+totalPrice;
                $("#total-price").html(totalPriceText.replace(/\./gi, ","));
            });

            function getProduct() {
                var product = "@ViewBag.ProductJson";
                product = product.replace(/&quot;/gi, "\"")
                    .replace(/&gt;/gi, ">")
                    .replace(/&lt;/gi, "<")
                    .replace(/&#233;/gi, "é")
                    .replace(/&#224;/gi, "à")
                    .replace(/&#39;/gi, "'")
                    .replace(/&#226;/gi, "â");
                return JSON.parse(product);
            }

            $("#submit-btn").click(function () {

                var product = getProduct();

                    var productsToAdd =
                        localStorage.getItem("basket") != null
                            ? JSON.parse(localStorage.getItem("basket"))
                            : [];

                    var productUnity = product.UnityOptions.filter(
                        (x) => parseFloat(x.Price) === parseFloat($("#price-option").val())
                )[0].Unity;

                var selectedProductOption = $("#product-option").val();

                    var productsToAddCheck = productsToAdd.filter(
                        (x) =>
                            x.Id === product.Id &&
                            x.Option.toLowerCase() === selectedProductOption.toLowerCase() &&
                            x.Unity.toLowerCase() === productUnity.toLowerCase()
                    );

                var quantity = $("#quantity").val();
                var totalPrice = $("#total-price").html();
                    if (quantity === "") return alert("Quantité incorrecte");

                    if (productsToAddCheck.length === 0)
                        productsToAdd.push({
                            Id: product.Id,
                            Product: product.Title,
                            Unity: productUnity,
                            Option: selectedProductOption,
                            Quantity: parseFloat(quantity),
                            TotalPrice: totalPrice,
                        });
                    else {
                        var foundIndex = productsToAdd.findIndex(
                            (x) =>
                                x.Id === product.Id &&
                                x.Option.toLowerCase() === selectedProductOption.toLowerCase() &&
                                x.Unity.toLowerCase() === productUnity.toLowerCase()
                        );
                        productsToAdd[foundIndex] = {
                            Id: product.Id,
                            Product: product.Title,
                            Unity: productUnity,
                            Option: selectedProductOption,
                            Quantity: parseFloat(quantity),
                            TotalPrice: totalPrice,
                        };
                }

                    localStorage.setItem("basket", JSON.stringify(productsToAdd));
                    alert("Produit ajouté au panier avec succés.");
            });

        });
    </script>
}

